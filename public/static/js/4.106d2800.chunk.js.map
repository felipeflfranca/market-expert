{"version":3,"sources":["ui-component/products/index.js","views/dashboard/ProductsSales.js","views/dashboard/ShoppingCart.js","views/dashboard/index.js"],"names":["connect","state","sales","product","addToBagVisible","quantity","dispatch","useState","editOpen","handleEditOpen","removeOpen","handleRemoveOpen","productQuantity","addMoreProduct","percentual","totalTaxes","JSON","parse","taxes","map","tax","keys","Object","total","value","toFixed","handleCloseEdit","handleCloseRemove","addToBagButton","style","marginTop","Grid","textAlign","paddingLeft","Paper","component","sx","display","alignItems","InputBase","ml","flex","label","placeholder","inputProps","border","borderRadius","paddingTop","paddingBottom","height","type","onChange","e","qtd","target","parseInt","IconButton","color","p","backgroundColor","onClick","existingQuantity","bag","code","parseFloat","ADD_PRODUCT_TO_BAG","productQuantityElement","item","xs","sm","md","lg","xl","padding","ButtonGroup","size","Button","endIcon","margin","Dialog","open","onClose","id","MainCard","content","title","DialogTitle","Typography","variant","description","DialogContent","container","spacing","TextField","minLength","marginRight","maxWidth","width","float","DialogActions","borderTop","pb","productCode","currentTarget","getAttribute","newBag","key","columns","justifyContent","search","researchedProduct","a","requestOptions","method","redirect","fetch","config","host","port","then","response","text","result","data","SEARCH_PRODUCT","products","catch","error","console","log","clearSearch","position","requisitionForProductResearch","autoFocus","Divider","m","orientation","Box","maxHeight","overflow","Array","isArray","my","setTotalTaxes","setTotal","didMountRef","useRef","useEffect","current","calcTotalTaxes","productTotal","i","length","tTaxes","list","flexDirection","CardContent","pt","bottom","CardActions","disableElevation","disabled","push","formdata","FormData","append","stringify","body","Swal","fire","icon","status","message","showConfirmButton","timer","Dashboard"],"mappings":"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","file":"static/js/4.106d2800.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, ButtonGroup, Grid, IconButton, InputBase, Paper, TextField, Typography } from '@mui/material';\r\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\r\nimport Real from '../money/real';\r\nimport { ADD_PRODUCT_TO_BAG } from '../../store/actions';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nconst ProductItem = ({ sales, product, addToBagVisible, quantity, dispatch }) => {\r\n    const [editOpen, handleEditOpen] = useState(false);\r\n    const [removeOpen, handleRemoveOpen] = useState(false);\r\n    const [productQuantity, addMoreProduct] = useState(1);\r\n\r\n    let percentual = 0;\r\n    let totalTaxes = 0;\r\n    const taxes = JSON.parse(product.taxes);\r\n    // eslint-disable-next-line array-callback-return\r\n    taxes.map((tax) => {\r\n        const keys = Object.keys(tax);\r\n        totalTaxes += tax[keys[0]];\r\n    });\r\n\r\n    const total = quantity ? (quantity * product.value).toFixed(2) : product.value;\r\n\r\n    if (totalTaxes > 0) {\r\n        percentual = totalTaxes;\r\n        totalTaxes = ((total * product.value) / 100).toFixed(2);\r\n    }\r\n\r\n    const handleCloseEdit = () => {\r\n        handleEditOpen(false);\r\n    };\r\n\r\n    const handleCloseRemove = () => {\r\n        handleRemoveOpen(false);\r\n    };\r\n\r\n    const removeProduct = (e) => {\r\n        const productCode = `code-${e.currentTarget.getAttribute('data-product')}`;\r\n\r\n        const keys = Object.keys(sales.bag);\r\n        const newBag = [];\r\n        // eslint-disable-next-line array-callback-return\r\n        keys.map((key) => {\r\n            if (key !== productCode) {\r\n                newBag[key] = sales.bag[key];\r\n            }\r\n        });\r\n\r\n        dispatch({ type: ADD_PRODUCT_TO_BAG, bag: newBag });\r\n    };\r\n\r\n    const addToBagButton = !addToBagVisible ? (\r\n        <></>\r\n    ) : (\r\n        <>\r\n            <div style={{ marginTop: '-5px' }}>\r\n                <Grid style={{ textAlign: 'left', paddingLeft: '10px' }}>\r\n                    <small>Quantidade:</small>\r\n                </Grid>\r\n                <Grid>\r\n                    <Paper component=\"form\" sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <InputBase\r\n                            sx={{ ml: 1, flex: 1 }}\r\n                            label=\"Quantidade\"\r\n                            placeholder=\"Quantidade\"\r\n                            inputProps={{ 'aria-label': 'Quantidade' }}\r\n                            style={{\r\n                                border: '1px solid #cecece',\r\n                                borderRadius: '10px 1px 0px 10px',\r\n                                paddingTop: '8px',\r\n                                paddingBottom: '8px',\r\n                                paddingLeft: '10px',\r\n                                height: '46px'\r\n                            }}\r\n                            type=\"number\"\r\n                            value={productQuantity}\r\n                            onChange={(e) => {\r\n                                const qtd = e.target.value ? parseInt(e.target.value, 10) : 1;\r\n                                addMoreProduct(qtd < 1 ? 1 : qtd);\r\n                            }}\r\n                        />\r\n                        <IconButton\r\n                            color=\"primary\"\r\n                            sx={{ p: '10px', color: 'secondary.dark' }}\r\n                            style={{\r\n                                backgroundColor: '#2196f3',\r\n                                color: '#ffffff',\r\n                                borderRadius: '0px 10px 10px 0px',\r\n                                border: '1px solid #2196f4'\r\n                            }}\r\n                            aria-label=\"directions\"\r\n                            onClick={() => {\r\n                                let existingQuantity = productQuantity;\r\n                                if (sales.bag[`code-${product.code}`]) {\r\n                                    existingQuantity = sales.bag[`code-${product.code}`].quantity + productQuantity;\r\n                                }\r\n\r\n                                sales.bag[`code-${product.code}`] = {\r\n                                    product,\r\n                                    quantity: existingQuantity,\r\n                                    total: (existingQuantity * parseFloat(product.value)).toFixed(2)\r\n                                };\r\n\r\n                                dispatch({ type: ADD_PRODUCT_TO_BAG, bag: sales.bag });\r\n                            }}\r\n                        >\r\n                            <AddShoppingCartIcon />\r\n                        </IconButton>\r\n                    </Paper>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    const productQuantityElement =\r\n        !quantity && addToBagVisible ? (\r\n            <></>\r\n        ) : (\r\n            <>\r\n                <Grid item>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12} sx={{ textAlign: 'right' }}>\r\n                        <small>Quantidade:</small> <strong>{quantity}</strong>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12} sx={{ textAlign: 'right', padding: '0px' }}>\r\n                        <ButtonGroup size=\"small\" aria-label=\"small button group\">\r\n                            <Button\r\n                                endIcon={<DeleteOutlineIcon sx={{ margin: '3px 3px 3px -6px', color: 'error.dark' }} />}\r\n                                style={{ border: '0px' }}\r\n                                onClick={() => {\r\n                                    handleRemoveOpen(true);\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                endIcon={<EditIcon sx={{ margin: '3px 3px 3px -6px' }} />}\r\n                                style={{ border: '0px' }}\r\n                                onClick={() => {\r\n                                    handleEditOpen(true);\r\n                                }}\r\n                            />\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                </Grid>\r\n                <Dialog\r\n                    open={editOpen}\r\n                    onClose={handleCloseEdit}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                    id=\"dialog-edit\"\r\n                >\r\n                    <MainCard content={false} style={{ textAlign: 'center' }} title=\"EDITAR QUANTIDADE DO PRODUTO NA SACOLA\">\r\n                        <DialogTitle>\r\n                            <Grid item xs={12} md={12}>\r\n                                <Typography variant=\"h2\">{`${product.code} - ${product.description}`}</Typography>\r\n                            </Grid>\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <Grid container spacing={0}>\r\n                                <Grid item xs={5} sm={5} md={5} lg={4} xl={4}>\r\n                                    <TextField\r\n                                        id=\"outlined-basic\"\r\n                                        label=\"Quantidade\"\r\n                                        variant=\"outlined\"\r\n                                        type=\"number\"\r\n                                        minLength={1}\r\n                                        sx={{ marginRight: '10px', maxWidth: '200px', marginTop: '20px' }}\r\n                                        style={{ textAlign: 'left', width: '100%', float: 'left' }}\r\n                                        value={sales.bag[`code-${product.code}`].quantity}\r\n                                        onChange={(e) => {\r\n                                            let qtd = e.target.value ? parseInt(e.target.value, 10) : 1;\r\n                                            qtd = qtd < 1 ? 1 : qtd;\r\n\r\n                                            if (qtd > 0) {\r\n                                                sales.bag[`code-${product.code}`] = {\r\n                                                    product,\r\n                                                    quantity: qtd,\r\n                                                    total: (qtd * parseFloat(product.value)).toFixed(2)\r\n                                                };\r\n\r\n                                                dispatch({ type: ADD_PRODUCT_TO_BAG, bag: sales.bag });\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={7} sm={7} md={7} lg={8} xl={8} style={{ padding: '0px' }}>\r\n                                    <Typography\r\n                                        variant=\"h1\"\r\n                                        sx={{ color: 'success.dark' }}\r\n                                        style={{ textAlign: 'right', marginTop: '24px' }}\r\n                                    >\r\n                                        <Real>{total}</Real>\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                        <DialogActions style={{ borderTop: '1px solid #cecece', padding: '10px 10px 10px 0px' }}>\r\n                            <Button variant=\"outlined\" onClick={handleCloseEdit}>\r\n                                Fechar\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </MainCard>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={removeOpen}\r\n                    onClose={handleCloseRemove}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                    id=\"dialog-remove\"\r\n                >\r\n                    <MainCard content={false} style={{ textAlign: 'center' }} title=\"DESEJA REMOVER O PRODUTO DA SACOLA?\">\r\n                        <DialogContent style={{ padding: '20px' }}>\r\n                            <Typography variant=\"h2\" sx={{ pb: 5 }}>{`${product.code} - ${product.description}`}</Typography>\r\n                        </DialogContent>\r\n                        <DialogActions style={{ borderTop: '1px solid #cecece', padding: '10px 10px 10px 0px' }}>\r\n                            <Button variant=\"outlined\" onClick={handleCloseRemove}>\r\n                                Não\r\n                            </Button>\r\n                            <Button variant=\"outlined\" color=\"error\" data-product={product.code} onClick={removeProduct}>\r\n                                Sim\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </MainCard>\r\n                </Dialog>\r\n            </>\r\n        );\r\n\r\n    return (\r\n        <>\r\n            <Grid container key={product.code} spacing={{ xs: 2, sm: 0, md: 2, lg: 0 }} columns={{ xs: 12, sm: 12, md: 12, lg: 12 }}>\r\n                <Grid item xs={12} sm={12} md={8} lg={8} xl={9}>\r\n                    <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Typography variant={addToBagVisible ? 'h3' : 'subtitle1'} color=\"inherit\">\r\n                                <strong>{product.code}</strong> - {product.description}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\">\r\n                                Impostos: <Real>{(percentual * total) / 100}</Real>\r\n                            </Typography>\r\n                            <Typography variant={addToBagVisible ? 'h4' : 'subtitle1'} sx={{ color: 'success.dark' }}>\r\n                                <Real>{total}</Real>\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4} lg={4} xl={3} sx={{ textAlign: 'right' }}>\r\n                    {addToBagButton}\r\n                    {productQuantityElement}\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nProductItem.propTypes = {\r\n    sales: PropTypes.any,\r\n    product: PropTypes.any,\r\n    addToBagVisible: PropTypes.bool,\r\n    quantity: PropTypes.number,\r\n    dispatch: PropTypes.any\r\n};\r\n\r\nexport default connect((state) => ({ sales: state.sales }))(ProductItem);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport config from 'config';\r\nimport { Box, Grid, Typography } from '@mui/material';\r\nimport Paper from '@mui/material/Paper';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport ProductItem from '../../ui-component/products';\r\nimport { SEARCH_PRODUCT } from 'store/actions';\r\n\r\nconst ProductsSales = ({ search, dispatch }) => {\r\n    async function requisitionForProductResearch(researchedProduct) {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://${config.host}:${config.port}/services?api=product&search=${researchedProduct}`, requestOptions)\r\n            .then((response) => response.text())\r\n            .then((result) => {\r\n                const data = JSON.parse(result);\r\n                dispatch({ type: SEARCH_PRODUCT, products: data.data, search: researchedProduct });\r\n            })\r\n            .catch((error) => console.log('error', error));\r\n    }\r\n\r\n    const clearSearch = () => {\r\n        dispatch({ type: SEARCH_PRODUCT, products: [], search: '' });\r\n    };\r\n\r\n    const searchProduct = (e) => {\r\n        const value = e.target.value;\r\n\r\n        if (value === '') {\r\n            clearSearch();\r\n        } else {\r\n            requisitionForProductResearch(value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainCard sx={{ height: 'calc(100vh - 131px)', position: 'relative' }}>\r\n            <Grid item xs={12}>\r\n                <Paper\r\n                    component=\"form\"\r\n                    sx={{\r\n                        p: '2px 4px',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        width: '100%',\r\n                        border: '1px solid #c7c7c7'\r\n                    }}\r\n                >\r\n                    <InputBase\r\n                        sx={{ ml: 1, flex: 1, width: '100%' }}\r\n                        placeholder=\"Buscar produto\"\r\n                        inputProps={{ 'aria-label': 'Buscar Produto' }}\r\n                        value={search.search}\r\n                        onChange={searchProduct}\r\n                        autoFocus\r\n                    />\r\n                    <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\r\n                    <IconButton color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\" type=\"button\" onClick={clearSearch}>\r\n                        <ClearIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n                <Box\r\n                    style={{\r\n                        maxHeight: 'calc(80vh - 60px)',\r\n                        overflow: 'auto',\r\n                        marginTop: '10px 10px 10px 10px',\r\n                        padding: '10px 10px 10px 10px'\r\n                    }}\r\n                >\r\n                    {!Array.isArray(search.products) ? (\r\n                        <Typography variant=\"h1\">{search.products}</Typography>\r\n                    ) : (\r\n                        search.products.map((product) => (\r\n                            <div key={`search-${product.code}`}>\r\n                                <ProductItem key={product.code} product={product} addToBagVisible quantity={0} />\r\n                                <Divider sx={{ my: 1.5 }} />\r\n                            </div>\r\n                        ))\r\n                    )}\r\n                </Box>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nProductsSales.propTypes = {\r\n    search: PropTypes.any,\r\n    dispatch: PropTypes.any\r\n};\r\n\r\nexport default connect((state) => ({ search: state.sales }))(ProductsSales);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Button, CardActions, CardContent, Grid, Typography } from '@mui/material';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport Divider from '@mui/material/Divider';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport Real from '../../ui-component/money/real';\r\nimport ProductItem from '../../ui-component/products';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport config from 'config';\r\nimport Swal from 'sweetalert2';\r\nimport { ADD_PRODUCT_TO_BAG, SEARCH_PRODUCT } from 'store/actions';\r\n\r\nconst ShoppingCart = ({ products, dispatch }) => {\r\n    const [totalTaxes, setTotalTaxes] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const didMountRef = useRef(false);\r\n    useEffect(() => {\r\n        if (didMountRef.current) {\r\n            const keys = Object.keys(products.bag);\r\n\r\n            let calcTotalTaxes = 0;\r\n            let productTotal = 0;\r\n            // eslint-disable-next-line no-plusplus\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const product = products.bag[keys[i]];\r\n                productTotal += parseFloat(product.total);\r\n\r\n                let tTaxes = 0;\r\n                const taxes = JSON.parse(product.product.taxes);\r\n                // eslint-disable-next-line no-plusplus\r\n                for (let i = 0; i < taxes.length; i++) {\r\n                    const tax = taxes[i];\r\n                    const taxeKeys = Object.keys(tax);\r\n                    tTaxes += tax[taxeKeys];\r\n                }\r\n\r\n                calcTotalTaxes += (tTaxes * product.total) / 100;\r\n            }\r\n            setTotalTaxes(calcTotalTaxes);\r\n            setTotal(productTotal);\r\n        } else {\r\n            didMountRef.current = true;\r\n        }\r\n    });\r\n\r\n    const keys = products.bag ? Object.keys(products.bag) : [];\r\n    const list = keys.map((key) => {\r\n        const quantity = products.bag[key].quantity;\r\n        const product = products.bag[key].product;\r\n\r\n        return (\r\n            <div key={`search-${product.code}`}>\r\n                <ProductItem key={product.code} product={product} addToBagVisible={false} quantity={quantity} />\r\n                <Divider sx={{ my: 1.5 }} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const checkout = () => {\r\n        const keys = Object.keys(products.bag);\r\n\r\n        const sales = [];\r\n        // eslint-disable-next-line no-plusplus\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const product = products.bag[keys[i]];\r\n            sales.push(product);\r\n        }\r\n\r\n        const formdata = new FormData();\r\n        formdata.append('data', JSON.stringify(sales));\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            body: formdata,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://${config.host}:${config.port}/services?api=sales`, requestOptions)\r\n            .then((response) => response.text())\r\n            .then((result) => {\r\n                const data = JSON.parse(result);\r\n\r\n                Swal.fire({\r\n                    icon: data.status,\r\n                    title: data.data.message,\r\n                    showConfirmButton: false,\r\n                    timer: 1800\r\n                });\r\n\r\n                dispatch({ type: ADD_PRODUCT_TO_BAG, bag: [] });\r\n                dispatch({ type: SEARCH_PRODUCT, products: [], search: '' });\r\n            })\r\n            .catch((error) => console.log('error', error));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MainCard content={false} style={{ height: 'calc(100vh - 195px)', position: 'relative' }}>\r\n                <Grid item xs={12}>\r\n                    <Box style={{ maxHeight: 'calc(80vh - 110px)', overflow: 'auto', display: 'flex', flexDirection: 'column-reverse' }}>\r\n                        <CardContent>{list}</CardContent>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ p: 1.25, pt: 0, justifyContent: 'center', bottom: 0, position: 'absolute', width: '100%' }}>\r\n                    <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                        Impostos:\r\n                        <span style={{ float: 'right' }}>\r\n                            <Real>{totalTaxes.toFixed(2)}</Real>\r\n                        </span>\r\n                    </Typography>\r\n                    <Typography variant=\"h1\" color=\"inherit\">\r\n                        Total:\r\n                        <span style={{ float: 'right' }}>\r\n                            <Real>{total.toFixed(2)}</Real>\r\n                        </span>\r\n                    </Typography>\r\n                </Grid>\r\n            </MainCard>\r\n            <MainCard content={false} sx={{ height: '65px', position: 'relative' }}>\r\n                <Grid item xs={12}>\r\n                    <CardActions\r\n                        sx={{ p: 1.25, pt: 0 }}\r\n                        style={{ justifyContent: 'center', bottom: 0, position: 'absolute', width: '100%' }}\r\n                    >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            size=\"large\"\r\n                            disableElevation\r\n                            sx={{ width: '100%' }}\r\n                            disabled={!total}\r\n                            onClick={checkout}\r\n                        >\r\n                            FINALIZAR COMPRA\r\n                            <ShoppingCartIcon />\r\n                        </Button>\r\n                    </CardActions>\r\n                </Grid>\r\n            </MainCard>\r\n        </>\r\n    );\r\n};\r\n\r\nShoppingCart.propTypes = {\r\n    products: PropTypes.any,\r\n    dispatch: PropTypes.any\r\n};\r\n\r\nexport default connect((state) => ({ products: state.sales }))(ShoppingCart);\r\n","import { Grid } from '@mui/material';\r\nimport ProductsSales from './ProductsSales';\r\nimport ShoppingCart from './ShoppingCart';\r\n\r\n// ==============================|| DEFAULT DASHBOARD ||============================== //\r\n\r\nconst Dashboard = () => (\r\n    <Grid container>\r\n        <Grid item xs={12} md={8}>\r\n            <ProductsSales />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n            <ShoppingCart />\r\n        </Grid>\r\n    </Grid>\r\n);\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}